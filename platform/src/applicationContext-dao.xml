<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd ">
		<!-- 使用外部文件配置数据源的属性 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- 外部文件地址 -->
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
	
	<!-- 配置数据源 -->
	<bean id="dataSource"
		  class="com.mchange.v2.c3p0.ComboPooledDataSource" 
		  destroy-method="close">
       <property name="driverClass" value="${jdbc.driverClassName}" />
       <property name="jdbcUrl" value="${jdbc.url}"/>
       <property name="user" value="${jdbc.username}"/>
       <property name="password" value="${jdbc.password}"/>
       
       <!--连接池中保留的最小连接数。-->
       <property name="minPoolSize" value="5" />
            
       <!--连接池中保留的最大连接数。Default: 15 -->
       <property name="maxPoolSize" value="20" />
       
       <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="10" />
      
       <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="60" />
       
       <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="5" />
       
       <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
		  属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
		  如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
        <property name="maxStatements" value="0"/>
      
       <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="60"/>
      
       <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
        <property name="acquireRetryAttempts" value="0" />
      
       <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效
		  保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
		  获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->
        <property name="breakAfterAcquireFailure" value="true" />
  
        <!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的
		  时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
		  等方法来提升连接测试的性能。Default: false
		-->
        <property name="testConnectionOnCheckout" value="false" />
	</bean>
	<!-- mybatis sessionfactory配置 
		使用AnnotationSessionFactoryBean创建基于JPA注解的SessionFactory-->
	<bean id="sqlMapClient"
		class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		 <!-- 引用数据源 -->
		<property name="dataSource">
			<ref bean="dataSource" />
		</property> 
		 <property name="configLocation"  
            value="classpath:mybatis-config.xml">  
        </property> 
	</bean>
	<bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient">
			<ref bean="sqlMapClient"/>
		</property>
		
	</bean>
	<!--
	<cache:annotation-driven />  
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:ehcache.xml"/>
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache"/>
	-->
	
	<!-- 
	<bean class="org.springframework.remoting.rmi.RmiServiceExporter">
     does not necessarily have to be the same name as the bean to be exported 
    <property name="serviceName" value="loginService"/>
    <property name="service" ref="loginService"/>
    <property name="serviceInterface" value="com.tao.service.LoginService"/>
     defaults to 1099 
    <property name="registryPort" value="1199"/>
    </bean>
     -->
	
</beans>